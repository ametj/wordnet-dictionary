// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WordNet.Data;

namespace WordNet.Data.Migrations
{
    [DbContext(typeof(WordNetDbContext))]
    partial class WordNetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("WordNet.Data.Model.LexicalEntry", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Forms")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastAccessed")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lemma")
                        .HasColumnType("TEXT");

                    b.Property<int>("PartOfSpeech")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Lemma");

                    b.ToTable("LexicalEntries");
                });

            modelBuilder.Entity("WordNet.Data.Model.Sense", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("LexicalEntryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SynsetId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LexicalEntryId");

                    b.HasIndex("SynsetId");

                    b.ToTable("Senses");
                });

            modelBuilder.Entity("WordNet.Data.Model.SenseRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SourceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("SenseRelations");
                });

            modelBuilder.Entity("WordNet.Data.Model.Synset", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Definitions")
                        .HasColumnType("TEXT");

                    b.Property<string>("Examples")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ili")
                        .HasColumnType("TEXT");

                    b.Property<int>("PartOfSpeech")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Synsets");
                });

            modelBuilder.Entity("WordNet.Data.Model.SynsetRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SourceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("SynsetRelations");
                });

            modelBuilder.Entity("WordNet.Data.Model.SyntacticBehaviour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LexicalEntryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senses")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubcategorizationFrame")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LexicalEntryId");

                    b.ToTable("SyntacticBehaviours");
                });

            modelBuilder.Entity("WordNet.Data.Model.Sense", b =>
                {
                    b.HasOne("WordNet.Data.Model.LexicalEntry", "LexicalEntry")
                        .WithMany("Senses")
                        .HasForeignKey("LexicalEntryId");

                    b.HasOne("WordNet.Data.Model.Synset", "Synset")
                        .WithMany("Senses")
                        .HasForeignKey("SynsetId");

                    b.Navigation("LexicalEntry");

                    b.Navigation("Synset");
                });

            modelBuilder.Entity("WordNet.Data.Model.SenseRelation", b =>
                {
                    b.HasOne("WordNet.Data.Model.Sense", "Source")
                        .WithMany("Relations")
                        .HasForeignKey("SourceId");

                    b.HasOne("WordNet.Data.Model.Sense", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId");

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("WordNet.Data.Model.SynsetRelation", b =>
                {
                    b.HasOne("WordNet.Data.Model.Synset", "Source")
                        .WithMany("Relations")
                        .HasForeignKey("SourceId");

                    b.HasOne("WordNet.Data.Model.Synset", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId");

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("WordNet.Data.Model.SyntacticBehaviour", b =>
                {
                    b.HasOne("WordNet.Data.Model.LexicalEntry", null)
                        .WithMany("SyntacticBehaviours")
                        .HasForeignKey("LexicalEntryId");
                });

            modelBuilder.Entity("WordNet.Data.Model.LexicalEntry", b =>
                {
                    b.Navigation("Senses");

                    b.Navigation("SyntacticBehaviours");
                });

            modelBuilder.Entity("WordNet.Data.Model.Sense", b =>
                {
                    b.Navigation("Relations");
                });

            modelBuilder.Entity("WordNet.Data.Model.Synset", b =>
                {
                    b.Navigation("Relations");

                    b.Navigation("Senses");
                });
#pragma warning restore 612, 618
        }
    }
}
