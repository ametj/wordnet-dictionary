<metro:MetroWindow x:Class="WordNet.Wpf.Views.Shell"
                   x:Name="MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                   xmlns:prism="http://prismlibrary.com/"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:core="clr-namespace:WordNet.Wpf.Core"
                   xmlns:vm="clr-namespace:WordNet.Wpf.ViewModels"
                   mc:Ignorable="d"
                   Title="WordNet"
                   MinHeight="300" MinWidth="400"
                   Height="400" Width="600"
                   MouseDown="Window_MouseDown"
                   Loaded="Window_Loaded"
                   prism:ViewModelLocator.AutoWireViewModel="True"
                   d:DataContext="{d:DesignInstance Type=vm:ShellViewModel}">
    <metro:MetroWindow.Resources>
        <ResourceDictionary>
            <Storyboard x:Key="FadeOutOldFadeInNew">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CurrentContentPresentationSite"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="0" />
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <SineEase />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="PreviousContentPresentationSite"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Style TargetType="{x:Type icon:PackIconMaterial}">
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>

            <!--  This is the template for the menu item  -->
            <DataTemplate x:Key="HamburgerMenuItemTemplate" DataType="{x:Type metro:HamburgerMenuIconItem}">
                <DockPanel Height="40" LastChildFill="True">
                    <ContentControl x:Name="IconPart"
                                    Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type metro:HamburgerMenu}}, Path=CompactPaneLength}"
                                    Content="{Binding Icon}"
                                    DockPanel.Dock="Left"
                                    Focusable="False"
                                    IsTabStop="False" />
                    <TextBlock x:Name="TextPart"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </DockPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type metro:HamburgerMenu}}, Path=PanePlacement}" Value="Right">
                        <Setter TargetName="IconPart" Property="DockPanel.Dock" Value="Right" />
                        <Setter TargetName="TextPart" Property="Margin" Value="8 0 0 0" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </metro:MetroWindow.Resources>
    <DockPanel>
        <metro:HamburgerMenu x:Name="HamburgerMenuControl"
                             DisplayMode="CompactOverlay"
                             CompactPaneLength="40"
                             HamburgerWidth="40"
                             HamburgerHeight="40"
                             PanePlacement="Left"
                             OpenPaneLength="200"
                             CanResizeOpenPane="True"
                             SelectedIndex="0"
                             ItemTemplate="{StaticResource HamburgerMenuItemTemplate}"
                             OptionsItemTemplate="{StaticResource HamburgerMenuItemTemplate}">
            <metro:HamburgerMenu.Content>
                <metro:TransitioningContentControl x:Name="HamburgerMenuContent"
                                                   Transition="Custom"
                                                   CustomVisualStatesName="FadeOutOldFadeInNew"
                                                   Margin="8, 4"
                                                   prism:RegionManager.RegionName="{x:Static core:RegionNames.ContentRegion}">
                    <metro:TransitioningContentControl.CustomVisualStates>
                        <VisualState x:Name="FadeOutOldFadeInNew" Storyboard="{StaticResource FadeOutOldFadeInNew}" />
                    </metro:TransitioningContentControl.CustomVisualStates>
                </metro:TransitioningContentControl>
            </metro:HamburgerMenu.Content>
            <!--  Header  -->
            <metro:HamburgerMenu.HamburgerMenuHeaderTemplate>
                <DataTemplate>
                    <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="16"
                           Foreground="White"
                           Text="Menu" />
                </DataTemplate>
            </metro:HamburgerMenu.HamburgerMenuHeaderTemplate>

            <!--  Items  -->
            <metro:HamburgerMenu.ItemsSource>
                <metro:HamburgerMenuItemCollection>
                    <metro:HamburgerMenuIconItem Label="Dictionary" Command="{Binding DataContext.NavigateCommand, ElementName=MainWindow}" CommandParameter="Dictionary">
                        <metro:HamburgerMenuIconItem.Icon>
                            <icon:PackIconMaterial Kind="BookAlphabet" />
                        </metro:HamburgerMenuIconItem.Icon>
                    </metro:HamburgerMenuIconItem>
                    <metro:HamburgerMenuIconItem Label="Guess the word" Command="{Binding DataContext.NavigateCommand, ElementName=MainWindow}" CommandParameter="Placeholder">
                        <metro:HamburgerMenuIconItem.Icon>
                            <icon:PackIconMaterial Kind="FileQuestion" />
                        </metro:HamburgerMenuIconItem.Icon>
                    </metro:HamburgerMenuIconItem>
                </metro:HamburgerMenuItemCollection>
            </metro:HamburgerMenu.ItemsSource>

            <!--Options-->
            <metro:HamburgerMenu.OptionsItemsSource>
                <metro:HamburgerMenuItemCollection>
                    <metro:HamburgerMenuIconItem Label="Settings" Command="{Binding DataContext.NavigateCommand, ElementName=MainWindow}" CommandParameter="Settings">
                        <metro:HamburgerMenuIconItem.Icon>
                            <icon:PackIconMaterial Kind="Cog" />
                        </metro:HamburgerMenuIconItem.Icon>
                    </metro:HamburgerMenuIconItem>
                    <metro:HamburgerMenuIconItem Label="About">
                        <metro:HamburgerMenuIconItem.Icon>
                            <icon:PackIconMaterial Kind="Help" />
                        </metro:HamburgerMenuIconItem.Icon>
                    </metro:HamburgerMenuIconItem>
                </metro:HamburgerMenuItemCollection>
            </metro:HamburgerMenu.OptionsItemsSource>
        </metro:HamburgerMenu>
    </DockPanel>
</metro:MetroWindow>